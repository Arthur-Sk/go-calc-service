syntax = "proto3";

package calc;
option go_package="./calculator/calcpb";

message SumActionReq {
    repeated int32 terms = 1;
}

message SumActionResp {
    int64 sum = 1;
}

message PrimeNumberDecomposeReq {
    int64 target = 1;
}

message PrimeNumberDecomposeResp {
    int64 component = 1;
}

message ComputeAverageRequest {
    int64 member = 1;
}

message ComputeAverageResponse {
    double average = 1;
}

message FindMaximumRequest {
    int64 num = 1;
}

message FindMaximumResponse {
    int64 max_num = 1;
}

message SquareRootRequest {
    int64 num = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service CalcService {
    rpc Sum(SumActionReq) returns (SumActionResp);
    rpc DecomposeToPrime(PrimeNumberDecomposeReq) returns (stream PrimeNumberDecomposeResp);
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse);
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse);

    // error handling
    // RPC will throw an exception if the sent number is negative
    // The error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse);
}